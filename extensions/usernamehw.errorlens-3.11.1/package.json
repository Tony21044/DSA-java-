{
	"name": "errorlens",
	"displayName": "Error Lens",
	"description": "Improve highlighting of errors, warnings and other language diagnostics.",
	"version": "3.11.1",
	"publisher": "usernamehw",
	"license": "MIT",
	"engines": {
		"vscode": "^1.77.0",
		"npm": ">=7.0.0"
	},
	"extensionKind": [
		"ui",
		"workspace"
	],
	"categories": [
		"Other"
	],
	"qna": false,
	"keywords": [
		"highlight",
		"problem",
		"problems",
		"error",
		"warning",
		"inline",
		"message",
		"diagnostic",
		"status bar",
		"gutter"
	],
	"icon": "img/icon.png",
	"repository": {
		"type": "git",
		"url": "https://github.com/usernamehw/vscode-error-lens"
	},
	"activationEvents": [
		"onStartupFinished"
	],
	"main": "./dist/extension.js",
	"browser": "./dist/extension.js",
	"contributes": {
		"commands": [
			{
				"command": "errorLens.toggle",
				"title": "Toggle (Enable/Disable) Everything",
				"description": "Toggle (Enable/Disable) Everything (toggle global setting `errorLens.enabled`)",
				"category": "Error Lens"
			},
			{
				"command": "errorLens.toggleError",
				"title": "Toggle Errors",
				"description": "Enable/Disable Errors in `errorLens.enabledDiagnosticLevels` setting.",
				"category": "Error Lens"
			},
			{
				"command": "errorLens.toggleWarning",
				"title": "Toggle Warnings",
				"description": "Enable/Disable Warnings in `errorLens.enabledDiagnosticLevels` setting.",
				"category": "Error Lens"
			},
			{
				"command": "errorLens.toggleInfo",
				"title": "Toggle Info",
				"description": "Enable/Disable Info in `errorLens.enabledDiagnosticLevels` setting.",
				"category": "Error Lens"
			},
			{
				"command": "errorLens.toggleHint",
				"title": "Toggle Hint",
				"description": "Enable/Disable Hint in `errorLens.enabledDiagnosticLevels` setting.",
				"category": "Error Lens"
			},
			{
				"command": "errorLens.copyProblemMessage",
				"title": "Copy Problem Message",
				"description": "Copy problem message to the clipboard (at the active cursor).",
				"category": "Error Lens"
			},
			{
				"command": "errorLens.copyProblemCode",
				"title": "Copy Problem Code",
				"description": "Copy problem code to the clipboard (at the active cursor).",
				"category": "Error Lens"
			},
			{
				"command": "errorLens.findLinterRuleDefinition",
				"title": "Find Linter Rule Definition",
				"description": "Search in local linter files (like `.eslintrc.json`) for the rule definition.",
				"category": "Error Lens"
			},
			{
				"command": "errorlens.toggleWorkspace",
				"title": "Toggle Workspace in Disabled List",
				"description": "Exclude/Include current workspace by fs path.",
				"category": "Error Lens"
			},
			{
				"command": "errorLens.searchForProblem",
				"title": "Search for problem",
				"description": "Open problem in default browser (controlled by `errorLens.searchForProblemQuery` setting).",
				"category": "Error Lens"
			},
			{
				"command": "errorLens.disableLine",
				"title": "Disable line",
				"description": "Add a comment to disable line for linter rule.",
				"category": "Error Lens"
			}
		],
		"configuration": {
			"properties": {
				"errorLens.enabled": {
					"type": "boolean",
					"default": true,
					"description": "Controls all decorations and features (except commands)."
				},
				"errorLens.enabledInMergeConflict": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "Controls if decorations are shown if the editor has git merge conflict indicators `<<<<<<<` or `=======` or `>>>>>>>`."
				},
				"errorLens.fontFamily": {
					"type": "string",
					"default": "",
					"description": "Font family of inline message."
				},
				"errorLens.fontWeight": {
					"type": "string",
					"enum": [
						"100",
						"200",
						"300",
						"400",
						"normal",
						"500",
						"600",
						"700",
						"bold",
						"800",
						"900"
					],
					"default": "normal",
					"markdownDescription": "Font weight of inline message. `\"normal\"` is alias for 400, `\"bold\"` is alias for 700)."
				},
				"errorLens.fontStyleItalic": {
					"type": "boolean",
					"default": false,
					"description": "When enabled - shows inline message in italic font style."
				},
				"errorLens.fontSize": {
					"type": "string",
					"default": "",
					"markdownDescription": "Font size of inline message ([CSS units](https://developer.mozilla.org/en-US/docs/Web/CSS/length))."
				},
				"errorLens.margin": {
					"type": "string",
					"default": "4ch",
					"markdownDescription": "Distance between the last word on the line and the start of inline message ([CSS units](https://developer.mozilla.org/en-US/docs/Web/CSS/length))."
				},
				"errorLens.padding": {
					"type": "string",
					"default": "",
					"markdownDescription": "Padding of the inline message. Visible when `#errorLens.messageBackgroundMode#` is set to \"message\".",
					"examples": [
						"2px 1ch"
					]
				},
				"errorLens.borderRadius": {
					"type": "string",
					"default": "3px",
					"markdownDescription": "Border radius of the inline message. Visible when `#errorLens.messageBackgroundMode#` is set to \"message\".",
					"examples": [
						"5px",
						"5em 0px",
						"0px 5em 5em 0px"
					]
				},
				"errorLens.enabledDiagnosticLevels": {
					"type": "array",
					"items": {
						"type": "string",
						"enum": [
							"error",
							"warning",
							"info",
							"hint"
						]
					},
					"uniqueItems": true,
					"description": "Customize which diagnostic levels(severity) to highlight.",
					"default": [
						"error",
						"warning",
						"info"
					]
				},
				"errorLens.messageTemplate": {
					"type": "string",
					"default": "$message",
					"markdownDescription": "Template used for all inline messages. Whitespace between items is important.\n\nList of variables:\n\n- `$message` - diagnostic message text\n\n- `$count` - Number of diagnostics on the line\n\n- `$severity` - Severity prefix taken from `#errorLens.severityText#`\n\n- `$source` - Source of diagnostic e.g. \"eslint\"\n\n- `$code` - Code of the diagnostic"
				},
				"errorLens.messageMaxChars": {
					"type": "integer",
					"default": 500,
					"minimum": 0,
					"markdownDescription": "Cut off inline message if it's longer than this value. (Improves performance when the diagnostic message is long). Set to **0** to disable inline message."
				},
				"errorLens.severityText": {
					"type": "array",
					"items": {
						"type": "string"
					},
					"markdownDescription": "Replaces `$severity` variable in `#errorLens.messageTemplate#`.",
					"default": [
						"ERROR",
						"WARNING",
						"INFO",
						"HINT"
					],
					"minItems": 4,
					"maxItems": 4
				},
				"errorLens.annotationPrefix": {
					"type": "array",
					"items": {
						"type": "string"
					},
					"markdownDescription": "Specify diagnostic message prefixes (when `#errorLens.addAnnotationTextPrefixes#` is enabled). For example, emoji: ❗ ⚠ ℹ.",
					"markdownDeprecationMessage": "Deprecated in favor of `#errorLens.severityText#` & `#errorLens.messageTemplate#`. https://github.com/usernamehw/vscode-error-lens/issues/92",
					"default": [
						"ERROR: ",
						"WARNING: ",
						"INFO: ",
						"HINT: "
					],
					"maxItems": 4
				},
				"errorLens.addAnnotationTextPrefixes": {
					"type": "boolean",
					"markdownDescription": "When enabled - prepends diagnostic severity ('ERROR:', 'WARNING:' etc) to the message. (Prefixes can be configured with `annotationPrefix` setting).",
					"markdownDeprecationMessage": "Deprecated in favor of `#errorLens.messageTemplate#`. https://github.com/usernamehw/vscode-error-lens/issues/92",
					"default": false
				},
				"errorLens.addNumberOfDiagnostics": {
					"type": "boolean",
					"markdownDescription": "When enabled - prepends number of diagnostics on the line. Like: `[1/2]`.",
					"markdownDeprecationMessage": "Deprecated in favor of `#errorLens.messageTemplate#`. https://github.com/usernamehw/vscode-error-lens/issues/92",
					"default": false
				},
				"errorLens.messageEnabled": {
					"type": "boolean",
					"default": true,
					"description": "Controls whether inline message is shown or not (Including background highlight)."
				},
				"errorLens.messageBackgroundMode": {
					"type": "string",
					"default": "line",
					"enum": [
						"line",
						"message",
						"none"
					],
					"enumDescriptions": [
						"The entire line is highlighted.",
						"Inline message is highlighted.",
						"Message is not highlighted (only has foreground colors)."
					],
					"description": "Controls how inline message is highlighted in the editor (entire line / only message / none)."
				},
				"errorLens.editorHoverPartsEnabled": {
					"type": "object",
					"properties": {
						"messageEnabled": {
							"type": "boolean",
							"default": false
						},
						"sourceCodeEnabled": {
							"type": "boolean",
							"default": false
						},
						"buttonsEnabled": {
							"type": "boolean",
							"default": false
						}
					},
					"additionalProperties": false,
					"default": {
						"messageEnabled": false,
						"sourceCodeEnabled": false,
						"buttonsEnabled": false
					},
					"markdownDescription": "Controls which parts of the editor hover tooltip to show."
				},
				"errorLens.statusBarIconsEnabled": {
					"type": "boolean",
					"markdownDescription": "When enabled - shows highlighted error/warning icons in status bar.",
					"default": false
				},
				"errorLens.statusBarIconsPriority": {
					"type": "integer",
					"markdownDescription": "Move status bar icons left or right by adjasting the number priority.",
					"default": -9000
				},
				"errorLens.statusBarIconsAlignment": {
					"type": "string",
					"markdownDescription": "Choose on which side the icons status bar is on: left or right.",
					"enum": [
						"left",
						"right"
					],
					"default": "left"
				},
				"errorLens.statusBarIconsUseBackground": {
					"type": "boolean",
					"markdownDescription": "When enabled - highlights status bar icons with background, when disabled - with foreground.",
					"default": true
				},
				"errorLens.statusBarIconsAtZero": {
					"type": "string",
					"markdownDescription": "What to do when there are 0 errors/warnings - hide the item or strip its background color.",
					"enum": [
						"hide",
						"removeBackground"
					],
					"default": "removeBackground"
				},
				"errorLens.statusBarMessageEnabled": {
					"type": "boolean",
					"markdownDescription": "When enabled - shows message in status bar.",
					"default": false
				},
				"errorLens.statusBarMessagePriority": {
					"type": "integer",
					"markdownDescription": "Move status bar message left or right by adjasting the number priority.",
					"default": -10000
				},
				"errorLens.statusBarMessageAlignment": {
					"type": "string",
					"markdownDescription": "Choose on which side the message status bar is on: left or right.",
					"enum": [
						"left",
						"right"
					],
					"default": "left"
				},
				"errorLens.statusBarColorsEnabled": {
					"type": "boolean",
					"markdownDescription": "When enabled - use message decoration foreground as color of Status Bar text.",
					"default": false
				},
				"errorLens.statusBarMessageType": {
					"type": "string",
					"markdownDescription": "Pick what to show in Status Bar: closest message or only message for the active line.",
					"enum": [
						"closestProblem",
						"closestSeverity",
						"activeLine"
					],
					"enumDescriptions": [
						"Show closest to the cursor diagnostic.",
						"Show closest to the cursor diagnostic (sorted by severity e.g. error will be shown before warning even if it's farther from the cursor).",
						"Show only diagnostic that is on the same line as the cursor."
					],
					"default": "activeLine"
				},
				"errorLens.statusBarCommand": {
					"type": "string",
					"markdownDescription": "Pick command that activates on click for Status Bar.",
					"enum": [
						"goToProblem",
						"goToLine",
						"copyMessage"
					],
					"default": "goToProblem"
				},
				"errorLens.statusBarMessageTemplate": {
					"type": "string",
					"default": "",
					"markdownDescription": "Template for status bar message. Whitespace between items is important.\n\nList of variables:\n\n- `$message` - diagnostic message text\n\n- `$count` - Number of diagnostics on the line\n\n- `$severity` - Severity prefix taken from `#errorLens.severityText#`\n\n- `$source` - Source of diagnostic e.g. \"eslint\"\n\n- `$code` - Code of the diagnostic"
				},
				"errorLens.exclude": {
					"type": "array",
					"default": [],
					"items": {
						"type": "string"
					},
					"markdownDescription": "Specify messages that should not be highlighted (RegExp). Strings passed to the RegExp constructor: `new RegExp(EXCLUDE_ITEM, 'i');`"
				},
				"errorLens.excludeBySource": {
					"type": "array",
					"default": [],
					"items": {
						"type": "string"
					},
					"markdownDescription": "Specify source or source(code) pair that should not be highlighted. Examples: `[\"eslint\"]` or `[\"eslint(padded-blocks)\"]`"
				},
				"errorLens.excludePatterns": {
					"type": "array",
					"default": [],
					"items": {
						"type": "string"
					},
					"markdownDescription": "Exclude files by using glob pattern. Example `[\"**/*.{ts,js}\"]`"
				},
				"errorLens.excludeWorkspaces": {
					"type": "array",
					"default": [],
					"items": {
						"type": "string"
					},
					"markdownDescription": "Exclude workspaces by path."
				},
				"errorLens.disableLineComments": {
					"type": "object",
					"markdownDescription": "Used for `errorLens.disableLine` command that adds a comment disabling linter rule for a line.",
					"patternProperties": {
						".*": {
							"type": "string"
						}
					},
					"default": {
						"eslint": "// eslint-disable-next-line $code",
						"Stylelint": "/* stylelint-disable-next-line $code */"
					}
				},
				"errorLens.lintFilePaths": {
					"type": "object",
					"default": {
						"eslint": [
							"**/*.eslintrc.{js,cjs,yaml,yml,json}",
							"**/*package.json"
						],
						"Stylelint": [
							"**/*.stylelintrc",
							"**/*.stylelintrc.{cjs,js,json,yaml,yml}",
							"**/*stylelint.config.{cjs,js}",
							"**/*package.json"
						]
					},
					"patternProperties": {
						".*": {
							"oneOf": [
								{
									"type": "array",
									"items": {
										"type": "string"
									}
								},
								{
									"type": "string",
									"enum": [
										"none"
									]
								}
							]
						}
					},
					"markdownDescription": "Specify where to search for linter rule definitions by diagnostic source ([glob](https://code.visualstudio.com/api/references/vscode-api#GlobPattern) for local linter files). `node_modules` folder is excluded."
				},
				"errorLens.searchForProblemQuery": {
					"type": "string",
					"default": "https://duckduckgo.com/?q=$message",
					"markdownDescription": "Pick query to open in default browser when searching for problem with `errorLens.searchForProblem` command."
				},
				"errorLens.light": {
					"type": "object",
					"markdownDescription": "Specify color of decorations for when the light color theme is active.",
					"properties": {
						"errorGutterIconPath": {
							"type": "string",
							"description": "Absolute path to error gutter icon for light themes.",
							"default": ""
						},
						"warningGutterIconPath": {
							"type": "string",
							"description": "Absolute path to warning gutter icon for light themes.",
							"default": ""
						},
						"infoGutterIconPath": {
							"type": "string",
							"description": "Absolute path to info gutter icon for light themes.",
							"default": ""
						},
						"errorGutterIconColor": {
							"type": "string",
							"default": "",
							"markdownDescription": "Error color of `circle` gutter icon set for light themes.",
							"format": "color"
						},
						"warningGutterIconColor": {
							"type": "string",
							"default": "",
							"markdownDescription": "Warning color of `circle` gutter icon set for light themes.",
							"format": "color"
						},
						"infoGutterIconColor": {
							"type": "string",
							"default": "",
							"markdownDescription": "Info color of `circle` gutter icon set for light themes.",
							"format": "color"
						}
					}
				},
				"errorLens.delay": {
					"type": "integer",
					"markdownDescription": "Delay (ms) before showing problem decorations (**0** to disable). Minimum delay of **500** is enforced by the extension. New errors will be added with this delay; old errors that were fixed should disappear faster.",
					"default": 0
				},
				"errorLens.onSave": {
					"type": "boolean",
					"description": "When enabled - updates decorations only on document save (manual).",
					"default": false
				},
				"errorLens.onSaveTimeout": {
					"type": "number",
					"description": "Time period (ms) that used for showing decorations after the document save.",
					"default": 1000
				},
				"errorLens.enableOnDiffView": {
					"type": "boolean",
					"markdownDescription": "Enable decorations when viewing a diff view in the editor (e.g. Git diff).",
					"default": false
				},
				"errorLens.followCursor": {
					"type": "string",
					"enum": [
						"allLines",
						"allLinesExceptActive",
						"activeLine",
						"closestProblem"
					],
					"enumDescriptions": [
						"Highlight all problems in file",
						"Highlight all problems in file (except the line at the cursor)",
						"Highlight only the problem at the cursor",
						"Highlight only closest to the cursor problem"
					],
					"description": "Highlight only portion of the problems.",
					"default": "allLines"
				},
				"errorLens.followCursorMore": {
					"type": "number",
					"markdownDescription": "Augments `#errorLens.followCursor#`.\nAdds number of lines to top and bottom when `#errorLens.followCursor#` is set to `activeLine`.\n Adds number of closest problems when `#errorLens.followCursor#` is `closestProblem`",
					"default": 0
				},
				"errorLens.gutterIconsEnabled": {
					"type": "boolean",
					"description": "When enabled - shows gutter icons (In place of the debug breakpoint icon).",
					"default": false
				},
				"errorLens.gutterIconsFollowCursorOverride": {
					"type": "boolean",
					"markdownDescription": "When enabled and `#errorLens.followCursor#` setting is not `allLines`, then gutter icons would be rendered for all problems. But line decorations (background, message) only for active line.",
					"default": true
				},
				"errorLens.gutterIconSize": {
					"type": "string",
					"markdownDescription": "Change gutter icon size. Examples: `auto`, `contain`, `cover`, `50%`, `150%`.",
					"examples": [
						"auto",
						"contain",
						"cover",
						"50%",
						"150%"
					],
					"default": "100%"
				},
				"errorLens.gutterIconSet": {
					"type": "string",
					"description": "Change gutter icon style.",
					"enum": [
						"default",
						"defaultOutline",
						"borderless",
						"circle"
					],
					"enumDescriptions": [
						"Similar to vscode icons in Problems Panel (old).",
						"Similar to vscode icons in Problems Panel (new).",
						"Similar to vscode icons in Problems Panel, only without a border.",
						"Simple filled circle."
					],
					"default": "default"
				},
				"errorLens.errorGutterIconPath": {
					"type": "string",
					"description": "Absolute path to error gutter icon.",
					"default": ""
				},
				"errorLens.warningGutterIconPath": {
					"type": "string",
					"description": "Absolute path to warning gutter icon.",
					"default": ""
				},
				"errorLens.infoGutterIconPath": {
					"type": "string",
					"description": "Absolute path to info gutter icon.",
					"default": ""
				},
				"errorLens.errorGutterIconColor": {
					"type": "string",
					"default": "#e45454",
					"markdownDescription": "Error color of `circle` gutter icon set.",
					"format": "color"
				},
				"errorLens.warningGutterIconColor": {
					"type": "string",
					"default": "#ff942f",
					"markdownDescription": "Warning color of `circle` gutter icon set.",
					"format": "color"
				},
				"errorLens.infoGutterIconColor": {
					"type": "string",
					"default": "#00b7e4",
					"markdownDescription": "Info color of `circle` gutter icon set.",
					"format": "color"
				},
				"errorLens.removeLinebreaks": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "When enabled - replaces line breaks in inline diagnostic message with whitespaces."
				},
				"errorLens.replaceLinebreaksSymbol": {
					"type": "string",
					"default": "⏎",
					"markdownDescription": "Symbol to replace linebreaks. Requires enabling `#errorLens.removeLinebreaks#`."
				},
				"errorLens.scrollbarHackEnabled": {
					"type": "boolean",
					"default": false,
					"markdownDescription": "When enabled - prevents showing horizontal scrollbar in editor (caused by inline decorations)."
				}
			}
		},
		"colors": [
			{
				"id": "errorLens.errorBackground",
				"defaults": {
					"dark": "#e454541b",
					"light": "#e4545420",
					"highContrast": "#e454541b"
				},
				"description": "Background color of the entire line containing error."
			},
			{
				"id": "errorLens.errorMessageBackground",
				"defaults": {
					"dark": "#e4545419",
					"light": "#e4545419",
					"highContrast": "#e4545419"
				},
				"description": "Background color of the error message."
			},
			{
				"id": "errorLens.errorBackgroundLight",
				"defaults": {
					"dark": "#e4545420",
					"light": "#e4545420",
					"highContrast": "#e4545420"
				},
				"description": "Background color of the entire line containing error (Only in light themes)."
			},
			{
				"id": "errorLens.errorForeground",
				"defaults": {
					"dark": "#ff6464",
					"light": "#e45454",
					"highContrast": "#ff6464"
				},
				"description": "Text color used to highlight lines containing errors."
			},
			{
				"id": "errorLens.errorForegroundLight",
				"defaults": {
					"dark": "#e45454",
					"light": "#e45454",
					"highContrast": "#e45454"
				},
				"description": "Text color used to highlight lines containing errors (Only in light themes)."
			},
			{
				"id": "errorLens.warningBackground",
				"defaults": {
					"dark": "#ff942f1b",
					"light": "#ff942f20",
					"highContrast": "#ff942f1b"
				},
				"description": "Background color used to highlight lines containing warnings."
			},
			{
				"id": "errorLens.warningMessageBackground",
				"defaults": {
					"dark": "#ff942f19",
					"light": "#ff942f19",
					"highContrast": "#ff942f19"
				},
				"description": "Background color of the warning message."
			},
			{
				"id": "errorLens.warningBackgroundLight",
				"defaults": {
					"dark": "#ff942f20",
					"light": "#ff942f20",
					"highContrast": "#ff942f20"
				},
				"description": "Background color used to highlight lines containing warnings (Only in light themes)."
			},
			{
				"id": "errorLens.warningForeground",
				"defaults": {
					"dark": "#fa973a",
					"light": "#ff942f",
					"highContrast": "#fa973a"
				},
				"description": "Text color used to highlight lines containing warnings."
			},
			{
				"id": "errorLens.warningForegroundLight",
				"defaults": {
					"dark": "#ff942f",
					"light": "#ff942f",
					"highContrast": "#ff942f"
				},
				"description": "Text color used to highlight lines containing warnings (Only in light themes)."
			},
			{
				"id": "errorLens.infoBackground",
				"defaults": {
					"dark": "#00b7e420",
					"light": "#00b7e420",
					"highContrast": "#00b7e420"
				},
				"description": "Background color used to highlight lines containing info."
			},
			{
				"id": "errorLens.infoMessageBackground",
				"defaults": {
					"dark": "#00b7e419",
					"light": "#00b7e419",
					"highContrast": "#00b7e419"
				},
				"description": "Background color of the info message."
			},
			{
				"id": "errorLens.infoBackgroundLight",
				"defaults": {
					"dark": "#00b7e420",
					"light": "#00b7e420",
					"highContrast": "#00b7e420"
				},
				"description": "Background color used to highlight lines containing info (Only in light themes)."
			},
			{
				"id": "errorLens.infoForeground",
				"defaults": {
					"dark": "#00b7e4",
					"light": "#00b7e4",
					"highContrast": "#00b7e4"
				},
				"description": "Text color used to highlight lines containing info."
			},
			{
				"id": "errorLens.infoForegroundLight",
				"defaults": {
					"dark": "#00b7e4",
					"light": "#00b7e4",
					"highContrast": "#00b7e4"
				},
				"description": "Text color used to highlight lines containing info (Only in light themes)."
			},
			{
				"id": "errorLens.hintBackground",
				"defaults": {
					"dark": "#17a2a220",
					"light": "#17a2a220",
					"highContrast": "#17a2a220"
				},
				"description": "Background color used to highlight lines containing hints."
			},
			{
				"id": "errorLens.hintMessageBackground",
				"defaults": {
					"dark": "#17a2a219",
					"light": "#17a2a219",
					"highContrast": "#17a2a219"
				},
				"description": "Background color of the hint message."
			},
			{
				"id": "errorLens.hintBackgroundLight",
				"defaults": {
					"dark": "#17a2a220",
					"light": "#17a2a220",
					"highContrast": "#17a2a220"
				},
				"description": "Background color used to highlight lines containing hints (Only in light themes)."
			},
			{
				"id": "errorLens.hintForeground",
				"defaults": {
					"dark": "#2faf64",
					"light": "#2faf64",
					"highContrast": "#2faf64"
				},
				"description": "Text color used to highlight lines containing hints."
			},
			{
				"id": "errorLens.hintForegroundLight",
				"defaults": {
					"dark": "#2faf64",
					"light": "#2faf64",
					"highContrast": "#2faf64"
				},
				"description": "Text color used to highlight lines containing hints (Only in light themes)."
			},
			{
				"id": "errorLens.statusBarIconErrorForeground",
				"defaults": {
					"dark": "#ff6464",
					"light": "#e45454",
					"highContrast": "#ff6464"
				},
				"description": "Status bar icon item error color. Foreground is used when the `errorLens.statusBarIconsUseBackground` setting is disabled."
			},
			{
				"id": "errorLens.statusBarIconWarningForeground",
				"defaults": {
					"dark": "#fa973a",
					"light": "#ff942f",
					"highContrast": "#fa973a"
				},
				"description": "Status bar icon item error color. Foreground is used when the `errorLens.statusBarIconsUseBackground` setting is disabled."
			},
			{
				"id": "errorLens.statusBarErrorForeground",
				"defaults": {
					"dark": "#ff6464",
					"light": "#e45454",
					"highContrast": "#ff6464"
				},
				"description": "Status bar item error color."
			},
			{
				"id": "errorLens.statusBarWarningForeground",
				"defaults": {
					"dark": "#fa973a",
					"light": "#ff942f",
					"highContrast": "#fa973a"
				},
				"description": "Status bar item warning color."
			},
			{
				"id": "errorLens.statusBarInfoForeground",
				"defaults": {
					"dark": "#00b7e4",
					"light": "#00b7e4",
					"highContrast": "#00b7e4"
				},
				"description": "Status bar item info color."
			},
			{
				"id": "errorLens.statusBarHintForeground",
				"defaults": {
					"dark": "#2faf64",
					"light": "#2faf64",
					"highContrast": "#2faf64"
				},
				"description": "Status bar item hint color."
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "webpack --mode production --color --devtool hidden-source-map",
		"watch": "webpack --mode development --watch --stats minimal"
	},
	"devDependencies": {
		"@soda/friendly-errors-webpack-plugin": "^1.8.1",
		"@types/lodash": "^4.14.194",
		"@types/node": "16.x",
		"@types/vscode": "^1.77.0",
		"@typescript-eslint/eslint-plugin": "^5.59.2",
		"@typescript-eslint/parser": "^5.59.2",
		"eslint": "^8.40.0",
		"eslint-plugin-no-autofix": "1.2.3",
		"ts-loader": "^9.4.2",
		"typescript": "^5.0.4",
		"webpack": "^5.82.0",
		"webpack-cli": "^5.0.2"
	},
	"dependencies": {
		"lodash": "^4.17.21"
	},
	"__metadata": {
		"id": "9d8c32ab-354c-4daf-a9bf-20b633734435",
		"publisherId": "151820df-5dc5-4c97-8751-eb84643203fa",
		"publisherDisplayName": "Alexander",
		"targetPlatform": "undefined",
		"isApplicationScoped": false,
		"updated": true,
		"isPreReleaseVersion": false,
		"installedTimestamp": 1686789474425,
		"preRelease": false
	}
}